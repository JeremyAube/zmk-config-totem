//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define SYM  1
#define NUM  2
#define FN   3

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <200>;
};
 
&sl {
    release-after-ms = <1000>;
};

#define MEH LC(LA(LSHIFT))
#define HYPR LC(LA(LG(LSHIFT)))

/ {
        keymap {
                compatible = "zmk,keymap";

                // -------------- BASE LAYER --------------
                base_layer {
                    label= "BASE";
                    bindings = <
                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
                &mt LCTRL A &mt LALT S  &mt LGUI D  &mt MEH F   &mt HYPR G      &kp H       &kp J       &mt RGUI K  &mt RALT L  &mt RCTRL BSPC
    &kp TAB     &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp TAB    &kp FSLH
                                        &lt FN ESC  &kp LSHIFT  &sl SYM         &sl NUM     &lt FN SPACE &kp RET
                    >;
                };

                // -------------- SYM LAYER --------------
                sym_layer {
                    label= "SYM";
                    bindings = <
                &kp EXCL        &kp AT          &kp HASH        &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp ASTRK       &kp MINUS       &kp SEMI
                &mt LCTRL GRAVE &mt LALT LBRC   &mt LGUI LPAR   &kp LBKT    &kp LT          &kp GT      &kp RBKT    &mt RGUI RPAR   &mt RALT RBRC   &mt RCTRL COLON
    &trans      &kp TILDE       &kp SLASH       &kp EQUAL       &kp PIPE    &kp BSLH        &kp UNDER   &kp PLUS    &kp APOS        &kp DQT         &kp QMARK   &trans      
                                                    &trans      &trans      &trans          &trans      &trans      &trans      
                    >;
                };

                // -------------- NUM LAYER --------------
                num_layer {
                    label= "NUM";
                    bindings = <
                &kp N1          &kp N2         &kp N3      &kp N4        &kp N5          &kp N6      &kp N7      &kp N8      &kp N9         &kp N0       
                &mt LCTRL LA(U) &mt LALT LA(I) &kp LGUI    &kp LA(GRAVE) &kp LA(E)       &kp LEFT    &kp DOWN    &mt RGUI UP &mt RALT RIGHT &kp RCTRL 
    &trans      &kp LA(N)       &kp SLASH      &kp LA(C)   &trans        &trans          &kp MINUS   &kp PLUS    &kp LT      &kp GT         &trans   &trans         
                                               &trans      &trans        &trans          &trans      &trans      &trans      
                    >;
                };


                // -------------- FN LAYER --------------
                function_layer {
                    label= "FN";
                    bindings = <
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5          &kp F6      &kp F7       &kp F8            &kp F9       &kp F10
                &kp LCTRL   &kp LALT    &kp LGUI    &trans      &trans          &trans      &kp C_VOL_UP &mt RGUI C_BRI_UP &mt RALT F11 &mt RCTRL DEL  
    &trans      &trans      &trans      &kp LG(X)   &kp LG(C)   &kp LG(V)       &trans      &kp C_VOL_DN &kp C_BRI_DN      &kp F12      &trans        &trans         
                                        &trans      &trans      &trans          &trans      &trans       &trans      
                    >;
                };
        };
};
